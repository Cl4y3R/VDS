[0.000000] (-) TimerEvent: {}
[0.000764] (-) JobUnselected: {'identifier': 'autodriving'}
[0.001013] (chassis_controller) JobQueued: {'identifier': 'chassis_controller', 'dependencies': OrderedDict()}
[0.001041] (chassis_controller) JobStarted: {'identifier': 'chassis_controller'}
[0.010973] (chassis_controller) JobProgress: {'identifier': 'chassis_controller', 'progress': 'cmake'}
[0.011784] (chassis_controller) JobProgress: {'identifier': 'chassis_controller', 'progress': 'build'}
[0.012014] (chassis_controller) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/cl4y3r/VDS/build/chassis_controller', '--', '-j8', '-l8'], 'cwd': '/home/cl4y3r/VDS/build/chassis_controller', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'cl4y3r'), ('LC_TIME', 'zh_CN.UTF-8'), ('SSH_AGENT_PID', '1914'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/cl4y3r'), ('OLDPWD', '/home/cl4y3r'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('MANAGERPID', '1702'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/cl4y3r/VDS/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'cl4y3r'), ('JOURNAL_STREAM', '8:45686'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'cl4y3r'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/Ubuntu20:@/tmp/.ICE-unix/1942,unix/Ubuntu20:/tmp/.ICE-unix/1942'), ('INVOCATION_ID', '4d4ab97eca434d0793a4f36e147dc178'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/061ec229_c7ff_48b7_9a67_e63201d56ad8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.258'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/cl4y3r/VDS/install/icc:/home/cl4y3r/VDS/install/chassis_controller:/home/cl4y3r/VDS/install/autodriving:/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('LC_NAME', 'zh_CN.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/cl4y3r/VDS/build/chassis_controller'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/home/cl4y3r/VDS/install/icc:/home/cl4y3r/VDS/install/chassis_controller:/home/cl4y3r/VDS/install/autodriving:/opt/ros/foxy')]), 'shell': False}
[0.054213] (chassis_controller) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target chassis_controller\x1b[0m\n'}
[0.078691] (chassis_controller) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/chassis_controller.dir/src/chassis_controller.cpp.o\x1b[0m\n'}
[0.100042] (-) TimerEvent: {}
[0.200374] (-) TimerEvent: {}
[0.300633] (-) TimerEvent: {}
[0.400915] (-) TimerEvent: {}
[0.501183] (-) TimerEvent: {}
[0.601461] (-) TimerEvent: {}
[0.701816] (-) TimerEvent: {}
[0.802059] (-) TimerEvent: {}
[0.902339] (-) TimerEvent: {}
[1.002633] (-) TimerEvent: {}
[1.102910] (-) TimerEvent: {}
[1.203195] (-) TimerEvent: {}
[1.303471] (-) TimerEvent: {}
[1.403718] (-) TimerEvent: {}
[1.504045] (-) TimerEvent: {}
[1.604366] (-) TimerEvent: {}
[1.704690] (-) TimerEvent: {}
[1.799144] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid ChassisController::msg_subscriber(const ConstSharedPtr&, const ConstSharedPtr&, const ConstSharedPtr&, const ConstSharedPtr&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.799340] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:48:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Knew_x\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-variable\x1b[m\x1b[K]\n'}
[1.799430] (chassis_controller) StderrLine: {'line': b'   48 |     double \x1b[01;35m\x1b[Knew_x\x1b[m\x1b[K=new_gps_msg->latitude;\n'}
[1.799504] (chassis_controller) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.799575] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:49:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Knew_y\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-variable\x1b[m\x1b[K]\n'}
[1.799646] (chassis_controller) StderrLine: {'line': b'   49 |     double \x1b[01;35m\x1b[Knew_y\x1b[m\x1b[K=new_gps_msg->longitude;\n'}
[1.799717] (chassis_controller) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.804772] (-) TimerEvent: {}
[1.812450] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kdouble ChassisController::longitudinal_controller(double, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.812683] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:74:58:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kvelocity_x\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[1.812758] (chassis_controller) StderrLine: {'line': b'   74 | double ChassisController::longitudinal_controller(\x1b[01;35m\x1b[Kdouble velocity_x\x1b[m\x1b[K, double acc_x){\n'}
[1.812854] (chassis_controller) StderrLine: {'line': b'      |                                                   \x1b[01;35m\x1b[K~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.812926] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:74:77:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kacc_x\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[1.812996] (chassis_controller) StderrLine: {'line': b'   74 | ontroller::longitudinal_controller(double velocity_x, \x1b[01;35m\x1b[Kdouble acc_x\x1b[m\x1b[K){\n'}
[1.813060] (chassis_controller) StderrLine: {'line': b'      |                                                       \x1b[01;35m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[1.813121] (chassis_controller) StderrLine: {'line': b'\n'}
[1.813182] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kdouble ChassisController::lateral_controller(double, double, double, double, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.813251] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:78:53:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kyaw\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[1.813323] (chassis_controller) StderrLine: {'line': b'   78 | double ChassisController::lateral_controller(\x1b[01;35m\x1b[Kdouble yaw\x1b[m\x1b[K, double yaw_rate, double pos_x, double pos_y, double velocity_x){\n'}
[1.813397] (chassis_controller) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K~~~~~~~^~~\x1b[m\x1b[K\n'}
[1.813462] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:78:65:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kyaw_rate\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[1.813534] (chassis_controller) StderrLine: {'line': b'   78 | ble ChassisController::lateral_controller(double yaw, \x1b[01;35m\x1b[Kdouble yaw_rate\x1b[m\x1b[K, double pos_x, double pos_y, double velocity_x){\n'}
[1.813596] (chassis_controller) StderrLine: {'line': b'      |                                                       \x1b[01;35m\x1b[K~~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.813657] (chassis_controller) StderrLine: {'line': b'\n'}
[1.813717] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:78:82:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kpos_x\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[1.813779] (chassis_controller) StderrLine: {'line': b'   78 | ller::lateral_controller(double yaw, double yaw_rate, \x1b[01;35m\x1b[Kdouble pos_x\x1b[m\x1b[K, double pos_y, double velocity_x){\n'}
[1.813840] (chassis_controller) StderrLine: {'line': b'      |                                                       \x1b[01;35m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[1.813901] (chassis_controller) StderrLine: {'line': b'\n'}
[1.813960] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:78:96:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kpos_y\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[1.814021] (chassis_controller) StderrLine: {'line': b'   78 | controller(double yaw, double yaw_rate, double pos_x, \x1b[01;35m\x1b[Kdouble pos_y\x1b[m\x1b[K, double velocity_x){\n'}
[1.814093] (chassis_controller) StderrLine: {'line': b'      |                                                       \x1b[01;35m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[1.814154] (chassis_controller) StderrLine: {'line': b'\n'}
[1.814214] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:78:110:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kvelocity_x\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[1.814280] (chassis_controller) StderrLine: {'line': b'   78 | er(double yaw, double yaw_rate, double pos_x, double pos_y, \x1b[01;35m\x1b[Kdouble velocity_x\x1b[m\x1b[K){\n'}
[1.814348] (chassis_controller) StderrLine: {'line': b'      |                                                             \x1b[01;35m\x1b[K~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.814557] (chassis_controller) StderrLine: {'line': b'\n'}
[1.904902] (-) TimerEvent: {}
[2.005153] (-) TimerEvent: {}
[2.105502] (-) TimerEvent: {}
[2.205739] (-) TimerEvent: {}
[2.306012] (-) TimerEvent: {}
[2.406285] (-) TimerEvent: {}
[2.506557] (-) TimerEvent: {}
[2.606835] (-) TimerEvent: {}
[2.707106] (-) TimerEvent: {}
[2.807377] (-) TimerEvent: {}
[2.907651] (-) TimerEvent: {}
[3.007926] (-) TimerEvent: {}
[3.108206] (-) TimerEvent: {}
[3.164195] (chassis_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/bind.hpp:22\x1b[m\x1b[K,\n'}
[3.164757] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/include/chassis_controller/chassis_controller.hpp:4\x1b[m\x1b[K,\n'}
[3.164883] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:1\x1b[m\x1b[K:\n'}
[3.164955] (chassis_controller) StderrLine: {'line': b'/usr/include/boost/bind/bind.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid boost::_bi::list5<A1, A2, A3, A4, A5>::operator()(boost::_bi::type<void>, F&, A&, int) [with F = boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>; A = boost::_bi::rrlist9<const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&>; A1 = boost::_bi::value<ChassisController*>; A2 = boost::arg<1>; A3 = boost::arg<2>; A4 = boost::arg<3>; A5 = boost::arg<4>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.165036] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/bind.hpp:1402:50:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kboost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::operator()(A1&&, A2&&, A3&&, A4&&, A5&&, A6&&, A7&&, A8&&, A9&&) [with A1 = const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&; A2 = const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&; A3 = const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&; A4 = const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&; A5 = const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&; A6 = const std::shared_ptr<const message_filters::NullType>&; A7 = const std::shared_ptr<const message_filters::NullType>&; A8 = const std::shared_ptr<const message_filters::NullType>&; A9 = const std::shared_ptr<const message_filters::NullType>&; R = void; F = boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>; L = boost::_bi::list5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> >; boost::_bi::bind_t<R, F, L>::result_type = void]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165123] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/invoke.h:60:36:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kconstexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = void; _Fn = boost::_bi::bind_t<void, boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>, boost::_bi::list5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >&; _Args = {const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165214] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/invoke.h:95:40:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kconstexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = boost::_bi::bind_t<void, boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>, boost::_bi::list5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >&; _Args = {const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = void]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165290] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:400:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Result std::_Bind<_Functor(_Bound_args ...)>::__call(std::tuple<_Args2 ...>&&, std::_Index_tuple<_Indexes ...>) [with _Result = void; _Args = {const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&}; long unsigned int ..._Indexes = {0, 1, 2, 3, 4, 5, 6, 7, 8}; _Functor = boost::_bi::bind_t<void, boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>, boost::_bi::list5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >; _Bound_args = {std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>, std::_Placeholder<8>, std::_Placeholder<9>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165370] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/functional:484:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[K_Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) [with _Args = {const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&}; _Result = void; _Functor = boost::_bi::bind_t<void, boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>, boost::_bi::list5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >; _Bound_args = {std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>, std::_Placeholder<8>, std::_Placeholder<9>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165478] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/std_function.h:300:37:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::_Function_handler<void(_ArgTypes ...), _Functor>::_M_invoke(const std::_Any_data&, _ArgTypes&& ...) [with _Functor = std::_Bind<boost::_bi::bind_t<void, boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>, boost::_bi::list5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >(std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>, std::_Placeholder<8>, std::_Placeholder<9>)>; _ArgTypes = {const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165551] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/std_function.h:676:19:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = std::_Bind<boost::_bi::bind_t<void, boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>, boost::_bi::list5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >(std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>, std::_Placeholder<8>, std::_Placeholder<9>)>; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Res = void; _ArgTypes = {const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165630] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(C&) [with C = const boost::_bi::bind_t<void, boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>, boost::_bi::list5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >; M0 = sensor_msgs::msg::Imu_<std::allocator<void> >; M1 = lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> >; M2 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M3 = nav_msgs::msg::Odometry_<std::allocator<void> >; M4 = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165698] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:298:40:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Synchronizer<Policy>::registerCallback(const C&) [with C = boost::_bi::bind_t<void, boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>, boost::_bi::list5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >; Policy = message_filters::sync_policies::ApproximateTime<sensor_msgs::msg::Imu_<std::allocator<void> >, lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> >, lgsvl_msgs::msg::CanBusData_<std::allocator<void> >, nav_msgs::msg::Odometry_<std::allocator<void> >, sensor_msgs::msg::NavSatFix_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165767] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:15:107:\x1b[m\x1b[K   required from here\n'}
[3.165828] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/bind.hpp:531:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(boost::_mfi::mf4<void, ChassisController, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&>) (ChassisController*&, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.165897] (chassis_controller) StderrLine: {'line': b'  531 |         \x1b[01;31m\x1b[Kunwrapper<F>::unwrap(f, 0)(a[base_type::a1_], a[base_type::a2_], a[base_type::a3_], a[base_type::a4_], a[base_type::a5_])\x1b[m\x1b[K;\n'}
[3.165957] (chassis_controller) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.166015] (chassis_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/bind/mem_fn.hpp:215\x1b[m\x1b[K,\n'}
[3.166074] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/mem_fn.hpp:22\x1b[m\x1b[K,\n'}
[3.166132] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/bind/bind.hpp:26\x1b[m\x1b[K,\n'}
[3.166189] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/bind.hpp:22\x1b[m\x1b[K,\n'}
[3.166253] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/include/chassis_controller/chassis_controller.hpp:4\x1b[m\x1b[K,\n'}
[3.166312] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:1\x1b[m\x1b[K:\n'}
[3.166375] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/mem_fn_template.hpp:504:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KR boost::_mfi::mf4<R, T, A1, A2, A3, A4>::operator()(T*, A1, A2, A3, A4) const [with R = void; T = ChassisController; A1 = const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&; A2 = const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&; A3 = const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&; A4 = const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.166440] (chassis_controller) StderrLine: {'line': b'  504 |     R \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(T * p, A1 a1, A2 a2, A3 a3, A4 a4) const\n'}
[3.166498] (chassis_controller) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.166561] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/mem_fn_template.hpp:504:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 5 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.166623] (chassis_controller) StderrLine: {'line': b'  504 |     R operator()(T * p, A1 a1, A2 a2, A3 a3, \x1b[01;36m\x1b[KA4 a4\x1b[m\x1b[K) const\n'}
[3.166682] (chassis_controller) StderrLine: {'line': b'      |                                              \x1b[01;36m\x1b[K~~~^~\x1b[m\x1b[K\n'}
[3.166740] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/mem_fn_template.hpp:509:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class U> R boost::_mfi::mf4<R, T, A1, A2, A3, A4>::operator()(U&, A1, A2, A3, A4) const [with U = U; R = void; T = ChassisController; A1 = const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&; A2 = const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&; A3 = const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&; A4 = const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.166803] (chassis_controller) StderrLine: {'line': b'  509 |     template<class U> R \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(U & u, A1 a1, A2 a2, A3 a3, A4 a4) const\n'}
[3.166863] (chassis_controller) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.166921] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/mem_fn_template.hpp:509:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[3.166980] (chassis_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/bind.hpp:22\x1b[m\x1b[K,\n'}
[3.167038] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/include/chassis_controller/chassis_controller.hpp:4\x1b[m\x1b[K,\n'}
[3.167096] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:1\x1b[m\x1b[K:\n'}
[3.167153] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/bind.hpp:531:35:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  cannot convert \xe2\x80\x98\x1b[01m\x1b[K(& a)->boost::_bi::rrlist9<const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&>::operator[](boost::_bi::storage5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> >::a5_)\x1b[m\x1b[K\xe2\x80\x99 (type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99) to type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.167222] (chassis_controller) StderrLine: {'line': b'  531 |         \x1b[01;36m\x1b[Kunwrapper<F>::unwrap(f, 0)(a[base_type::a1_], a[base_type::a2_], a[base_type::a3_], a[base_type::a4_], a[base_type::a5_])\x1b[m\x1b[K;\n'}
[3.167286] (chassis_controller) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.167348] (chassis_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/bind/mem_fn.hpp:215\x1b[m\x1b[K,\n'}
[3.167407] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/mem_fn.hpp:22\x1b[m\x1b[K,\n'}
[3.167470] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/bind/bind.hpp:26\x1b[m\x1b[K,\n'}
[3.167528] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/bind.hpp:22\x1b[m\x1b[K,\n'}
[3.167586] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/include/chassis_controller/chassis_controller.hpp:4\x1b[m\x1b[K,\n'}
[3.167644] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:1\x1b[m\x1b[K:\n'}
[3.167701] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/mem_fn_template.hpp:517:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class U> R boost::_mfi::mf4<R, T, A1, A2, A3, A4>::operator()(const U&, A1, A2, A3, A4) const [with U = U; R = void; T = ChassisController; A1 = const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&; A2 = const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&; A3 = const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&; A4 = const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.167763] (chassis_controller) StderrLine: {'line': b'  517 |     template<class U> R \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(U const & u, A1 a1, A2 a2, A3 a3, A4 a4) const\n'}
[3.167822] (chassis_controller) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.167880] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/mem_fn_template.hpp:517:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[3.167939] (chassis_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/bind.hpp:22\x1b[m\x1b[K,\n'}
[3.167997] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/include/chassis_controller/chassis_controller.hpp:4\x1b[m\x1b[K,\n'}
[3.168056] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:1\x1b[m\x1b[K:\n'}
[3.168113] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/bind.hpp:531:35:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  cannot convert \xe2\x80\x98\x1b[01m\x1b[K(& a)->boost::_bi::rrlist9<const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&>::operator[](boost::_bi::storage5<boost::_bi::value<ChassisController*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> >::a5_)\x1b[m\x1b[K\xe2\x80\x99 (type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99) to type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.168184] (chassis_controller) StderrLine: {'line': b'  531 |         \x1b[01;36m\x1b[Kunwrapper<F>::unwrap(f, 0)(a[base_type::a1_], a[base_type::a2_], a[base_type::a3_], a[base_type::a4_], a[base_type::a5_])\x1b[m\x1b[K;\n'}
[3.168244] (chassis_controller) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.168306] (chassis_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/bind/mem_fn.hpp:215\x1b[m\x1b[K,\n'}
[3.168365] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/mem_fn.hpp:22\x1b[m\x1b[K,\n'}
[3.168423] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/bind/bind.hpp:26\x1b[m\x1b[K,\n'}
[3.168481] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/bind.hpp:22\x1b[m\x1b[K,\n'}
[3.168539] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/include/chassis_controller/chassis_controller.hpp:4\x1b[m\x1b[K,\n'}
[3.168597] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:1\x1b[m\x1b[K:\n'}
[3.168655] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/mem_fn_template.hpp:525:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KR boost::_mfi::mf4<R, T, A1, A2, A3, A4>::operator()(T&, A1, A2, A3, A4) const [with R = void; T = ChassisController; A1 = const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&; A2 = const std::shared_ptr<const lgsvl_msgs::msg::VehicleOdometry_<std::allocator<void> > >&; A3 = const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&; A4 = const std::shared_ptr<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.168725] (chassis_controller) StderrLine: {'line': b'  525 |     R \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(T & t, A1 a1, A2 a2, A3 a3, A4 a4) const\n'}
[3.168783] (chassis_controller) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.168854] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/mem_fn_template.hpp:525:22:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[KChassisController*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KChassisController&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.168916] (chassis_controller) StderrLine: {'line': b'  525 |     R operator()(\x1b[01;36m\x1b[KT & t\x1b[m\x1b[K, A1 a1, A2 a2, A3 a3, A4 a4) const\n'}
[3.168974] (chassis_controller) StderrLine: {'line': b'      |                  \x1b[01;36m\x1b[K~~~~^\x1b[m\x1b[K\n'}
[3.208298] (-) TimerEvent: {}
[3.308588] (-) TimerEvent: {}
[3.408846] (-) TimerEvent: {}
[3.509079] (-) TimerEvent: {}
[3.609344] (-) TimerEvent: {}
[3.709621] (-) TimerEvent: {}
[3.809944] (-) TimerEvent: {}
[3.910265] (-) TimerEvent: {}
[4.010566] (-) TimerEvent: {}
[4.110862] (-) TimerEvent: {}
[4.211174] (-) TimerEvent: {}
[4.311486] (-) TimerEvent: {}
[4.411780] (-) TimerEvent: {}
[4.512085] (-) TimerEvent: {}
[4.612397] (-) TimerEvent: {}
[4.712699] (-) TimerEvent: {}
[4.812932] (-) TimerEvent: {}
[4.913237] (-) TimerEvent: {}
[5.013544] (-) TimerEvent: {}
[5.064230] (chassis_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/simple_filter.h:43\x1b[m\x1b[K,\n'}
[5.064805] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:41\x1b[m\x1b[K,\n'}
[5.064910] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/include/chassis_controller/chassis_controller.hpp:6\x1b[m\x1b[K,\n'}
[5.064987] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:1\x1b[m\x1b[K:\n'}
[5.065052] (chassis_controller) StderrLine: {'line': b'/opt/ros/foxy/include/message_filters/signal1.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid message_filters::CallbackHelper1T<P, M>::call(const message_filters::MessageEvent<const M>&, bool) [with P = const message_filters::MessageEvent<const nav_msgs::msg::Odometry_<std::allocator<void> > >&; M = sensor_msgs::msg::NavSatFix_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.065120] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:71:16:\x1b[m\x1b[K   required from here\n'}
[5.065181] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:73:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<const nav_msgs::msg::Odometry_<std::allocator<void> > >::MessageEvent(const message_filters::MessageEvent<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >&, bool)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.065244] (chassis_controller) StderrLine: {'line': b'   73 |     Event \x1b[01;31m\x1b[Kmy_event\x1b[m\x1b[K(event, nonconst_force_copy || event.nonConstWillCopy());\n'}
[5.065304] (chassis_controller) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.065363] (chassis_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:42\x1b[m\x1b[K,\n'}
[5.065422] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/simple_filter.h:43\x1b[m\x1b[K,\n'}
[5.065481] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:41\x1b[m\x1b[K,\n'}
[5.065539] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/include/chassis_controller/chassis_controller.hpp:6\x1b[m\x1b[K,\n'}
[5.065598] (chassis_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/chassis_controller/src/chassis_controller.cpp:1\x1b[m\x1b[K:\n'}
[5.065656] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:128:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&, rclcpp::Time, bool, const CreateFunction&) [with M = const nav_msgs::msg::Odometry_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >; typename std::add_const<M>::type = const nav_msgs::msg::Odometry_<std::allocator<void> >; message_filters::MessageEvent<M>::CreateFunction = std::function<std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >()>; typename std::remove_const<_Tp>::type = nav_msgs::msg::Odometry_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.065730] (chassis_controller) StderrLine: {'line': b'  128 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message, rclcpp::Time receipt_time, bool nonconst_need_copy, const CreateFunction& create)\n'}
[5.065791] (chassis_controller) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.065851] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:128:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 4 arguments, 2 provided\n'}
[5.065912] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:123:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&, rclcpp::Time) [with M = const nav_msgs::msg::Odometry_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >; typename std::add_const<M>::type = const nav_msgs::msg::Odometry_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.065989] (chassis_controller) StderrLine: {'line': b'  123 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message, rclcpp::Time receipt_time)\n'}
[5.066048] (chassis_controller) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.066106] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:123:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst ConstMessagePtr&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.066175] (chassis_controller) StderrLine: {'line': b'  123 |   MessageEvent(\x1b[01;36m\x1b[Kconst ConstMessagePtr& message\x1b[m\x1b[K, rclcpp::Time receipt_time)\n'}
[5.066234] (chassis_controller) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[5.066292] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:118:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&) [with M = const nav_msgs::msg::Odometry_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >; typename std::add_const<M>::type = const nav_msgs::msg::Odometry_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.066421] (chassis_controller) StderrLine: {'line': b'  118 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message)\n'}
[5.066480] (chassis_controller) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.066537] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:118:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.066597] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:110:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<const void>&, const CreateFunction&) [with M = const nav_msgs::msg::Odometry_<std::allocator<void> >; message_filters::MessageEvent<M>::CreateFunction = std::function<std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >()>; typename std::remove_const<_Tp>::type = nav_msgs::msg::Odometry_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.066659] (chassis_controller) StderrLine: {'line': b'  110 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<void const>& rhs, const CreateFunction& create)\n'}
[5.066717] (chassis_controller) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.066775] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:110:48:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const void>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.066844] (chassis_controller) StderrLine: {'line': b'  110 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<void const>& rhs\x1b[m\x1b[K, const CreateFunction& create)\n'}
[5.066902] (chassis_controller) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.066966] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:104:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::add_const<M>::type>&, bool) [with M = const nav_msgs::msg::Odometry_<std::allocator<void> >; typename std::add_const<M>::type = const nav_msgs::msg::Odometry_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.067028] (chassis_controller) StderrLine: {'line': b'  104 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<ConstMessage>& rhs, bool nonconst_need_copy)\n'}
[5.067086] (chassis_controller) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.067144] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:104:50:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const nav_msgs::msg::Odometry_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.067208] (chassis_controller) StderrLine: {'line': b'  104 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<ConstMessage>& rhs\x1b[m\x1b[K, bool nonconst_need_copy)\n'}
[5.067266] (chassis_controller) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.067323] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:98:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::remove_const<_Tp>::type>&, bool) [with M = const nav_msgs::msg::Odometry_<std::allocator<void> >; typename std::remove_const<_Tp>::type = nav_msgs::msg::Odometry_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.067388] (chassis_controller) StderrLine: {'line': b'   98 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<Message>& rhs, bool nonconst_need_copy)\n'}
[5.067448] (chassis_controller) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.067505] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:98:45:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const sensor_msgs::msg::NavSatFix_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<nav_msgs::msg::Odometry_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.067564] (chassis_controller) StderrLine: {'line': b'   98 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<Message>& rhs\x1b[m\x1b[K, bool nonconst_need_copy)\n'}
[5.067622] (chassis_controller) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.067679] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:93:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::add_const<M>::type>&) [with M = const nav_msgs::msg::Odometry_<std::allocator<void> >; typename std::add_const<M>::type = const nav_msgs::msg::Odometry_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.067747] (chassis_controller) StderrLine: {'line': b'   93 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<ConstMessage>& rhs)\n'}
[5.067806] (chassis_controller) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.067864] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:93:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.067921] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:88:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::remove_const<_Tp>::type>&) [with M = const nav_msgs::msg::Odometry_<std::allocator<void> >; typename std::remove_const<_Tp>::type = nav_msgs::msg::Odometry_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.067981] (chassis_controller) StderrLine: {'line': b'   88 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<Message>& rhs)\n'}
[5.068038] (chassis_controller) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.068125] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:88:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.068193] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:84:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent() [with M = const nav_msgs::msg::Odometry_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.068253] (chassis_controller) StderrLine: {'line': b'   84 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K()\n'}
[5.068311] (chassis_controller) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.068383] (chassis_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:84:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 2 provided\n'}
[5.113682] (-) TimerEvent: {}
[5.214026] (-) TimerEvent: {}
[5.314355] (-) TimerEvent: {}
[5.414676] (-) TimerEvent: {}
[5.515029] (-) TimerEvent: {}
[5.615408] (-) TimerEvent: {}
[5.715818] (-) TimerEvent: {}
[5.816219] (-) TimerEvent: {}
[5.858352] (chassis_controller) StderrLine: {'line': b'make[2]: *** [CMakeFiles/chassis_controller.dir/build.make:63: CMakeFiles/chassis_controller.dir/src/chassis_controller.cpp.o] Error 1\n'}
[5.858607] (chassis_controller) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/chassis_controller.dir/all] Error 2\n'}
[5.858779] (chassis_controller) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[5.860287] (chassis_controller) CommandEnded: {'returncode': 2}
[5.892471] (chassis_controller) JobEnded: {'identifier': 'chassis_controller', 'rc': 2}
[5.903807] (-) EventReactorShutdown: {}

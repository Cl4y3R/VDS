[0.000000] (-) TimerEvent: {}
[0.000313] (autodriving) JobQueued: {'identifier': 'autodriving', 'dependencies': OrderedDict()}
[0.000394] (autodriving) JobStarted: {'identifier': 'autodriving'}
[0.012429] (autodriving) JobProgress: {'identifier': 'autodriving', 'progress': 'cmake'}
[0.013610] (autodriving) JobProgress: {'identifier': 'autodriving', 'progress': 'build'}
[0.015316] (autodriving) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/cl4y3r/VDS/build/autodriving', '--', '-j8', '-l8'], 'cwd': '/home/cl4y3r/VDS/build/autodriving', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'cl4y3r'), ('LC_TIME', 'zh_CN.UTF-8'), ('SSH_AGENT_PID', '1967'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('HOME', '/home/cl4y3r'), ('OLDPWD', '/home/cl4y3r'), ('DESKTOP_SESSION', 'ubuntu'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('MANAGERPID', '1751'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=59d5e6cabf75868295d730da61828241'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('LOGNAME', 'cl4y3r'), ('JOURNAL_STREAM', '8:45624'), ('_', '/usr/bin/colcon'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'cl4y3r'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/home/cl4y3r/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/Ubuntu20:@/tmp/.ICE-unix/1995,unix/Ubuntu20:/tmp/.ICE-unix/1995'), ('INVOCATION_ID', '7ba4cbbda7844d26885267ae409c9c6b'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/afab60c0_6d1d_43e6_b9ab_6c715f7127fb'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.109'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('SHELL', '/bin/bash'), ('LC_NAME', 'zh_CN.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/cl4y3r/VDS/build/autodriving'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=59d5e6cabf75868295d730da61828241'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6003')]), 'shell': False}
[0.060773] (autodriving) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target main_msg\x1b[0m\n'}
[0.088014] (autodriving) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/main_msg.dir/src/msg_subpub.cpp.o\x1b[0m\n'}
[0.098711] (-) TimerEvent: {}
[0.199098] (-) TimerEvent: {}
[0.299464] (-) TimerEvent: {}
[0.399859] (-) TimerEvent: {}
[0.500237] (-) TimerEvent: {}
[0.600603] (-) TimerEvent: {}
[0.701009] (-) TimerEvent: {}
[0.801413] (-) TimerEvent: {}
[0.901757] (-) TimerEvent: {}
[1.002119] (-) TimerEvent: {}
[1.102529] (-) TimerEvent: {}
[1.202991] (-) TimerEvent: {}
[1.303484] (-) TimerEvent: {}
[1.403862] (-) TimerEvent: {}
[1.504236] (-) TimerEvent: {}
[1.604628] (-) TimerEvent: {}
[1.704989] (-) TimerEvent: {}
[1.762242] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/bind.hpp:22\x1b[m\x1b[K,\n'}
[1.762513] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:3\x1b[m\x1b[K:\n'}
[1.762616] (autodriving) StderrLine: {'line': b'/usr/include/boost/bind/bind.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct boost::_bi::result_traits<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&)>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.762716] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/bind.hpp:1284:48:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.762814] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:75:95:\x1b[m\x1b[K   required from here\n'}
[1.762900] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/bind/bind.hpp:75:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoid (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99 is not a class, struct, or union type\n'}
[1.762992] (autodriving) StderrLine: {'line': b'   75 |     typedef typename F::result_type \x1b[01;31m\x1b[Ktype\x1b[m\x1b[K;\n'}
[1.763077] (autodriving) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.805151] (-) TimerEvent: {}
[1.905501] (-) TimerEvent: {}
[1.964045] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/service.hpp:34\x1b[m\x1b[K,\n'}
[1.964342] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:25\x1b[m\x1b[K,\n'}
[1.964544] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.964974] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[1.965271] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.965358] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.965435] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[1.965512] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[1.965590] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.965785] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[1.965866] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:38\x1b[m\x1b[K,\n'}
[1.965942] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:5\x1b[m\x1b[K:\n'}
[1.966017] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid subscriber_callback(const ConstSharedPtr&, const ConstSharedPtr&, const ConstSharedPtr&, const ConstSharedPtr&, const ConstSharedPtr&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.966094] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:95:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid use of \xe2\x80\x98\x1b[01m\x1b[Kthis\x1b[m\x1b[K\xe2\x80\x99 in non-member function\n'}
[1.966232] (autodriving) StderrLine: {'line': b'   95 |     RCLCPP_INFO(\x1b[01;31m\x1b[Kthis\x1b[m\x1b[K->get_logger(), "Subscribed: Get 3D_ground_truth & Imu & signal & can_bus_data Message");\n'}
[1.966353] (autodriving) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.966428] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:95:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid use of \xe2\x80\x98\x1b[01m\x1b[Kthis\x1b[m\x1b[K\xe2\x80\x99 in non-member function\n'}
[1.966509] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:95:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[1.966592] (autodriving) StderrLine: {'line': b'   95 |     \x1b[01;31m\x1b[KRCLCPP_INFO\x1b[m\x1b[K(this->get_logger(), "Subscribed: Get 3D_ground_truth & Imu & signal & can_bus_data Message");\n'}
[1.966667] (autodriving) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.966758] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:95:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[1.966834] (autodriving) StderrLine: {'line': b'   95 |     \x1b[01;31m\x1b[KRCLCPP_INFO\x1b[m\x1b[K(this->get_logger(), "Subscribed: Get 3D_ground_truth & Imu & signal & can_bus_data Message");\n'}
[1.966911] (autodriving) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.966986] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:95:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[1.967069] (autodriving) StderrLine: {'line': b'   95 |     \x1b[01;31m\x1b[KRCLCPP_INFO\x1b[m\x1b[K(this->get_logger(), "Subscribed: Get 3D_ground_truth & Imu & signal & can_bus_data Message");\n'}
[1.967145] (autodriving) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.967220] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/client.hpp:40\x1b[m\x1b[K,\n'}
[1.967296] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:23\x1b[m\x1b[K,\n'}
[1.967373] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.967448] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[1.967525] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.967601] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.967677] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[1.967752] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[1.967828] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.967903] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[1.967978] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:38\x1b[m\x1b[K,\n'}
[1.968054] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:5\x1b[m\x1b[K:\n'}
[1.968130] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:95:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid use of \xe2\x80\x98\x1b[01m\x1b[Kthis\x1b[m\x1b[K\xe2\x80\x99 in non-member function\n'}
[1.968223] (autodriving) StderrLine: {'line': b'   95 |     RCLCPP_INFO(\x1b[01;31m\x1b[Kthis\x1b[m\x1b[K->get_logger(), "Subscribed: Get 3D_ground_truth & Imu & signal & can_bus_data Message");\n'}
[1.968301] (autodriving) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.968378] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:95:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid use of \xe2\x80\x98\x1b[01m\x1b[Kthis\x1b[m\x1b[K\xe2\x80\x99 in non-member function\n'}
[1.968455] (autodriving) StderrLine: {'line': b'   95 |     RCLCPP_INFO(\x1b[01;31m\x1b[Kthis\x1b[m\x1b[K->get_logger(), "Subscribed: Get 3D_ground_truth & Imu & signal & can_bus_data Message");\n'}
[1.968532] (autodriving) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.968608] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/service.hpp:34\x1b[m\x1b[K,\n'}
[1.968684] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:25\x1b[m\x1b[K,\n'}
[1.968762] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.968838] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[1.968916] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.968993] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.969081] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[1.969159] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[1.969241] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.969318] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[1.969395] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:38\x1b[m\x1b[K,\n'}
[1.969472] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:5\x1b[m\x1b[K:\n'}
[1.969548] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:97:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid use of \xe2\x80\x98\x1b[01m\x1b[Kthis\x1b[m\x1b[K\xe2\x80\x99 in non-member function\n'}
[1.969627] (autodriving) StderrLine: {'line': b'   97 |     RCLCPP_INFO(\x1b[01;31m\x1b[Kthis\x1b[m\x1b[K->get_logger(), "scan stamp:%d - %d - %d - %d -%d", image_msg->header.stamp.sec, imu_msg->header.stamp.sec, groundturth_msg->header.stamp.sec,\n'}
[1.969715] (autodriving) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.969792] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:97:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid use of \xe2\x80\x98\x1b[01m\x1b[Kthis\x1b[m\x1b[K\xe2\x80\x99 in non-member function\n'}
[1.969877] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:97:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[1.969955] (autodriving) StderrLine: {'line': b'   97 |     \x1b[01;31m\x1b[KRCLCPP_INFO\x1b[m\x1b[K(this->get_logger(), "scan stamp:%d - %d - %d - %d -%d", image_msg->header.stamp.sec, imu_msg->header.stamp.sec, groundturth_msg->header.stamp.sec,\n'}
[1.970033] (autodriving) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.970109] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:97:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[1.970260] (autodriving) StderrLine: {'line': b'   97 |     \x1b[01;31m\x1b[KRCLCPP_INFO\x1b[m\x1b[K(this->get_logger(), "scan stamp:%d - %d - %d - %d -%d", image_msg->header.stamp.sec, imu_msg->header.stamp.sec, groundturth_msg->header.stamp.sec,\n'}
[1.970358] (autodriving) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.970436] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:97:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[1.970513] (autodriving) StderrLine: {'line': b'   97 |     \x1b[01;31m\x1b[KRCLCPP_INFO\x1b[m\x1b[K(this->get_logger(), "scan stamp:%d - %d - %d - %d -%d", image_msg->header.stamp.sec, imu_msg->header.stamp.sec, groundturth_msg->header.stamp.sec,\n'}
[1.970591] (autodriving) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.970667] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/client.hpp:40\x1b[m\x1b[K,\n'}
[1.970744] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:23\x1b[m\x1b[K,\n'}
[1.970820] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.970897] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[1.970990] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.971061] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.971131] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[1.971202] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[1.971272] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.971341] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[1.971410] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:38\x1b[m\x1b[K,\n'}
[1.971480] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:5\x1b[m\x1b[K:\n'}
[1.971551] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:97:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid use of \xe2\x80\x98\x1b[01m\x1b[Kthis\x1b[m\x1b[K\xe2\x80\x99 in non-member function\n'}
[1.971624] (autodriving) StderrLine: {'line': b'   97 |     RCLCPP_INFO(\x1b[01;31m\x1b[Kthis\x1b[m\x1b[K->get_logger(), "scan stamp:%d - %d - %d - %d -%d", image_msg->header.stamp.sec, imu_msg->header.stamp.sec, groundturth_msg->header.stamp.sec,\n'}
[1.971711] (autodriving) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.971788] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:97:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid use of \xe2\x80\x98\x1b[01m\x1b[Kthis\x1b[m\x1b[K\xe2\x80\x99 in non-member function\n'}
[1.971864] (autodriving) StderrLine: {'line': b'   97 |     RCLCPP_INFO(\x1b[01;31m\x1b[Kthis\x1b[m\x1b[K->get_logger(), "scan stamp:%d - %d - %d - %d -%d", image_msg->header.stamp.sec, imu_msg->header.stamp.sec, groundturth_msg->header.stamp.sec,\n'}
[1.971943] (autodriving) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.972023] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid msgSubPub::publisher_callback()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.972102] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:124:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstruct lgsvl_msgs::msg::VehicleControlData_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Ktarget_wheel_angle_rate\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktarget_wheel_angular_rate\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.972183] (autodriving) StderrLine: {'line': b'  124 |     control.\x1b[01;31m\x1b[Ktarget_wheel_angle_rate\x1b[m\x1b[K = 0.1; //\xe8\xbd\xa6\xe8\xbd\xae\xe8\xbd\xac\xe8\xa7\x92\xe8\xa7\x92\xe9\x80\x9f\xe5\xba\xa6\n'}
[1.972259] (autodriving) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.972335] (autodriving) StderrLine: {'line': b'      |             \x1b[32m\x1b[Ktarget_wheel_angular_rate\x1b[m\x1b[K\n'}
[2.005693] (-) TimerEvent: {}
[2.106200] (-) TimerEvent: {}
[2.206589] (-) TimerEvent: {}
[2.280195] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.281774] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.282487] (autodriving) StderrLine: {'line': b'/opt/ros/foxy/include/message_filters/signal9.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(C&) [with C = const boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.282639] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:298:40:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Synchronizer<Policy>::registerCallback(const C&) [with C = boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >; Policy = message_filters::sync_policies::ApproximateTime<sensor_msgs::msg::CompressedImage_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >, lgsvl_msgs::msg::SignalArray_<std::allocator<void> >, lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.282748] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:75:96:\x1b[m\x1b[K   required from here\n'}
[2.282841] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Signal9<sensor_msgs::msg::CompressedImage_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >, lgsvl_msgs::msg::SignalArray_<std::allocator<void> >, lgsvl_msgs::msg::CanBusData_<std::allocator<void> >, message_filters::NullType, message_filters::NullType, message_filters::NullType, message_filters::NullType>::addCallback<const M0ConstPtr&, const M1ConstPtr&, const M2ConstPtr&, const M3ConstPtr&, const M4ConstPtr&, const M5ConstPtr&, const M6ConstPtr&, const M7ConstPtr&, const M8ConstPtr&>(std::_Bind_helper<false, const boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >&, const std::_Placeholder<1>&, const std::_Placeholder<2>&, const std::_Placeholder<3>&, const std::_Placeholder<4>&, const std::_Placeholder<5>&, const std::_Placeholder<6>&, const std::_Placeholder<7>&, const std::_Placeholder<8>&, const std::_Placeholder<9>&>::type)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.282961] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.283060] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.283150] (autodriving) StderrLine: {'line': b'\n'}
[2.283240] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.283337] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.283426] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:170:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(const std::function<void(P0, P1, P2, P3, P4, P5, P6, P7, P8)>&) [with P0 = const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&; P1 = const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&; P2 = const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&; P3 = const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&; P4 = const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&; P5 = const std::shared_ptr<const message_filters::NullType>&; P6 = const std::shared_ptr<const message_filters::NullType>&; P7 = const std::shared_ptr<const message_filters::NullType>&; P8 = const std::shared_ptr<const message_filters::NullType>&; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.283526] (autodriving) StderrLine: {'line': b'  170 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(const std::function<void(P0, P1, P2, P3, P4, P5, P6, P7, P8)>& callback)\n'}
[2.283615] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.283702] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:170:89:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind_helper<false, const boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >&, const std::_Placeholder<1>&, const std::_Placeholder<2>&, const std::_Placeholder<3>&, const std::_Placeholder<4>&, const std::_Placeholder<5>&, const std::_Placeholder<6>&, const std::_Placeholder<7>&, const std::_Placeholder<8>&, const std::_Placeholder<9>&>::type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >(std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>, std::_Placeholder<8>, std::_Placeholder<9>)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.283833] (autodriving) StderrLine: {'line': b'  170 | llback(\x1b[01;36m\x1b[Kconst std::function<void(P0, P1, P2, P3, P4, P5, P6, P7, P8)>& callback\x1b[m\x1b[K)\n'}
[2.283911] (autodriving) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[2.283986] (autodriving) StderrLine: {'line': b'\n'}
[2.284060] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:180:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1)) [with P0 = P0; P1 = P1; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.284141] (autodriving) StderrLine: {'line': b'  180 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1))\n'}
[2.284216] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.284289] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:180:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.284363] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.284437] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.284512] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 2)\n'}
[2.284587] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.284662] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.284742] (autodriving) StderrLine: {'line': b'\n'}
[2.284816] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.284890] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.284963] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:186:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2)) [with P0 = P0; P1 = P1; P2 = P2; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.285047] (autodriving) StderrLine: {'line': b'  186 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2))\n'}
[2.285124] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.285198] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:186:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.285273] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.285348] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.285423] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 3)\n'}
[2.285496] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.285571] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.285644] (autodriving) StderrLine: {'line': b'\n'}
[2.285721] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.285795] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.285869] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:192:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.285960] (autodriving) StderrLine: {'line': b'  192 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3))\n'}
[2.286036] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.286109] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:192:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.286277] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.286367] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.286441] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 4)\n'}
[2.286515] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.286589] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.286663] (autodriving) StderrLine: {'line': b'\n'}
[2.286736] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.286810] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.286885] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:198:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3, class P4> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3, P4)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.286965] (autodriving) StderrLine: {'line': b'  198 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3, P4))\n'}
[2.287040] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.287118] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:198:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.287193] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.287267] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.287340] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 5)\n'}
[2.287413] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.287487] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.287560] (autodriving) StderrLine: {'line': b'\n'}
[2.287633] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.287705] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.287816] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:204:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3, class P4, class P5> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3, P4, P5)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.287933] (autodriving) StderrLine: {'line': b'  204 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3, P4, P5))\n'}
[2.288044] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.288118] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:204:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.288192] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.288264] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.288338] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 6)\n'}
[2.288411] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.288486] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.288560] (autodriving) StderrLine: {'line': b'\n'}
[2.288669] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.288785] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.288864] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:210:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3, class P4, class P5, class P6> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3, P4, P5, P6)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; P6 = P6; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.288952] (autodriving) StderrLine: {'line': b'  210 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3, P4, P5, P6))\n'}
[2.289032] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.289112] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:210:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.289194] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[2.289280] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:6\x1b[m\x1b[K:\n'}
[2.289368] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 7)\n'}
[2.289447] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.289525] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.289602] (autodriving) StderrLine: {'line': b'\n'}
[2.289681] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:216:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3, class P4, class P5, class P6, class P7> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3, P4, P5, P6, P7)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; P6 = P6; P7 = P7; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.289768] (autodriving) StderrLine: {'line': b'  216 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3, P4, P5, P6, P7))\n'}
[2.289847] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.289927] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:216:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.290009] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 8)\n'}
[2.290089] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.290212] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.290331] (autodriving) StderrLine: {'line': b'\n'}
[2.290410] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:222:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3, P4, P5, P6, P7, P8)) [with P0 = const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&; P1 = const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&; P2 = const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&; P3 = const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&; P4 = const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&; P5 = const std::shared_ptr<const message_filters::NullType>&; P6 = const std::shared_ptr<const message_filters::NullType>&; P7 = const std::shared_ptr<const message_filters::NullType>&; P8 = const std::shared_ptr<const message_filters::NullType>&; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.290518] (autodriving) StderrLine: {'line': b'  222 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3, P4, P5, P6, P7, P8))\n'}
[2.290597] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.290677] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:222:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind_helper<false, const boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >&, const std::_Placeholder<1>&, const std::_Placeholder<2>&, const std::_Placeholder<3>&, const std::_Placeholder<4>&, const std::_Placeholder<5>&, const std::_Placeholder<6>&, const std::_Placeholder<7>&, const std::_Placeholder<8>&, const std::_Placeholder<9>&>::type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >(std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>, std::_Placeholder<8>, std::_Placeholder<9>)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&, const std::shared_ptr<const message_filters::NullType>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.290794] (autodriving) StderrLine: {'line': b'  222 |   Connection addCallback(\x1b[01;36m\x1b[Kvoid(*callback)(P0, P1, P2, P3, P4, P5, P6, P7, P8)\x1b[m\x1b[K)\n'}
[2.290875] (autodriving) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.290955] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:228:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1), T*) [with T = T; P0 = P0; P1 = P1; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.291048] (autodriving) StderrLine: {'line': b'  228 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1), T* t)\n'}
[2.291128] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.291207] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:228:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.291286] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 3)\n'}
[2.291364] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.291443] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.291522] (autodriving) StderrLine: {'line': b'\n'}
[2.291601] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:234:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.291693] (autodriving) StderrLine: {'line': b'  234 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2), T* t)\n'}
[2.291774] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.291854] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:234:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.291932] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 4)\n'}
[2.292033] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.292123] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.292225] (autodriving) StderrLine: {'line': b'\n'}
[2.292304] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:240:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2, P3), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; P3 = P3; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.292400] (autodriving) StderrLine: {'line': b'  240 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2, P3), T* t)\n'}
[2.292480] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.292559] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:240:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.292645] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 5)\n'}
[2.292731] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.292810] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.292888] (autodriving) StderrLine: {'line': b'\n'}
[2.292966] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:246:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3, class P4> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2, P3, P4), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.293056] (autodriving) StderrLine: {'line': b'  246 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2, P3, P4), T* t)\n'}
[2.293135] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.293215] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:246:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.293295] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 6)\n'}
[2.293375] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.293456] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.293536] (autodriving) StderrLine: {'line': b'\n'}
[2.293620] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:252:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3, class P4, class P5> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2, P3, P4, P5), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.293771] (autodriving) StderrLine: {'line': b'  252 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2, P3, P4, P5), T* t)\n'}
[2.293879] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.293954] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:252:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.294031] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 7)\n'}
[2.294108] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.294240] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.294352] (autodriving) StderrLine: {'line': b'\n'}
[2.294428] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:258:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3, class P4, class P5, class P6> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2, P3, P4, P5, P6), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; P6 = P6; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.294523] (autodriving) StderrLine: {'line': b'  258 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2, P3, P4, P5, P6), T* t)\n'}
[2.294605] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.294680] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:258:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.294756] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 8)\n'}
[2.294831] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.294907] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.294983] (autodriving) StderrLine: {'line': b'\n'}
[2.295060] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:264:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3, class P4, class P5, class P6, class P7> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2, P3, P4, P5, P6, P7), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; P6 = P6; P7 = P7; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.295152] (autodriving) StderrLine: {'line': b'  264 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2, P3, P4, P5, P6, P7), T* t)\n'}
[2.295233] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.295309] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:264:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.295386] (autodriving) StderrLine: {'line': b'/opt/ros/foxy/include/message_filters/signal9.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3, class P4, class P5, class P6, class P7> message_filters::Connection message_filters::Signal9<sensor_msgs::msg::CompressedImage_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >, lgsvl_msgs::msg::SignalArray_<std::allocator<void> >, lgsvl_msgs::msg::CanBusData_<std::allocator<void> >, message_filters::NullType, message_filters::NullType, message_filters::NullType, message_filters::NullType>::addCallback<T, P0, P1, P2, P3, P4, P5, P6, P7>(void (T::*)(P0, P1, P2, P3, P4, P5, P6, P7), T*) [with T = const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&; P0 = const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&; P1 = const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&; P2 = const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&; P3 = const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&; P4 = const std::shared_ptr<const message_filters::NullType>&; P5 = const std::shared_ptr<const message_filters::NullType>&; P6 = const std::shared_ptr<const message_filters::NullType>&; P7 = const std::shared_ptr<const message_filters::NullType>&]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.295477] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(C&) [with C = const boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.295583] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:298:40:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Synchronizer<Policy>::registerCallback(const C&) [with C = boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >; Policy = message_filters::sync_policies::ApproximateTime<sensor_msgs::msg::CompressedImage_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >, lgsvl_msgs::msg::SignalArray_<std::allocator<void> >, lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.295688] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:75:96:\x1b[m\x1b[K   required from here\n'}
[2.295770] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:264:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.295856] (autodriving) StderrLine: {'line': b'/opt/ros/foxy/include/message_filters/signal9.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(C&) [with C = const boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.295947] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:298:40:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Synchronizer<Policy>::registerCallback(const C&) [with C = boost::_bi::bind_t<boost::_bi::unspecified, void (msgSubPub::*)(const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const sensor_msgs::msg::CompressedImage_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, const std::shared_ptr<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&), boost::_bi::list5<boost::_bi::value<msgSubPub*>, boost::arg<1>, boost::arg<2>, boost::arg<3>, boost::arg<4> > >; Policy = message_filters::sync_policies::ApproximateTime<sensor_msgs::msg::CompressedImage_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >, lgsvl_msgs::msg::SignalArray_<std::allocator<void> >, lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.296045] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:75:96:\x1b[m\x1b[K   required from here\n'}
[2.296122] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:270:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class C> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(C&) [with C = C; M0 = sensor_msgs::msg::CompressedImage_<std::allocator<void> >; M1 = sensor_msgs::msg::Imu_<std::allocator<void> >; M2 = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; M3 = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; M4 = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.296209] (autodriving) StderrLine: {'line': b'  270 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K( C& callback)\n'}
[2.296286] (autodriving) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.296361] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:270:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.296437] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:280:267:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kwrong number of template arguments (9, should be 1)\n'}
[2.296513] (autodriving) StderrLine: {'line': b'  280 | aceholders::_7, std::placeholders::_8, std::placeholders::_9)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.296595] (autodriving) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.296672] (autodriving) StderrLine: {'line': b'\n'}
[2.306743] (-) TimerEvent: {}
[2.407102] (-) TimerEvent: {}
[2.507430] (-) TimerEvent: {}
[2.607798] (-) TimerEvent: {}
[2.708275] (-) TimerEvent: {}
[2.808805] (-) TimerEvent: {}
[2.909202] (-) TimerEvent: {}
[3.009608] (-) TimerEvent: {}
[3.109978] (-) TimerEvent: {}
[3.210435] (-) TimerEvent: {}
[3.310931] (-) TimerEvent: {}
[3.411310] (-) TimerEvent: {}
[3.511709] (-) TimerEvent: {}
[3.612091] (-) TimerEvent: {}
[3.712455] (-) TimerEvent: {}
[3.812820] (-) TimerEvent: {}
[3.913166] (-) TimerEvent: {}
[4.013521] (-) TimerEvent: {}
[4.113858] (-) TimerEvent: {}
[4.214241] (-) TimerEvent: {}
[4.314613] (-) TimerEvent: {}
[4.414949] (-) TimerEvent: {}
[4.515333] (-) TimerEvent: {}
[4.615673] (-) TimerEvent: {}
[4.716044] (-) TimerEvent: {}
[4.816398] (-) TimerEvent: {}
[4.916764] (-) TimerEvent: {}
[5.017129] (-) TimerEvent: {}
[5.117529] (-) TimerEvent: {}
[5.217900] (-) TimerEvent: {}
[5.318468] (-) TimerEvent: {}
[5.418919] (-) TimerEvent: {}
[5.519293] (-) TimerEvent: {}
[5.619722] (-) TimerEvent: {}
[5.720089] (-) TimerEvent: {}
[5.759104] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/simple_filter.h:43\x1b[m\x1b[K,\n'}
[5.759454] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:41\x1b[m\x1b[K,\n'}
[5.759839] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:5\x1b[m\x1b[K:\n'}
[5.760753] (autodriving) StderrLine: {'line': b'/opt/ros/foxy/include/message_filters/signal1.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid message_filters::CallbackHelper1T<P, M>::call(const message_filters::MessageEvent<const M>&, bool) [with P = const message_filters::MessageEvent<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&; M = lgsvl_msgs::msg::CanBusData_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.761500] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:71:16:\x1b[m\x1b[K   required from here\n'}
[5.761637] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:73:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >::MessageEvent(const message_filters::MessageEvent<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >&, bool)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.761776] (autodriving) StderrLine: {'line': b'   73 |     Event \x1b[01;31m\x1b[Kmy_event\x1b[m\x1b[K(event, nonconst_force_copy || event.nonConstWillCopy());\n'}
[5.761885] (autodriving) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.761989] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:42\x1b[m\x1b[K,\n'}
[5.762103] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/simple_filter.h:43\x1b[m\x1b[K,\n'}
[5.762271] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:41\x1b[m\x1b[K,\n'}
[5.762373] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:5\x1b[m\x1b[K:\n'}
[5.762472] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:128:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&, rclcpp::Time, bool, const CreateFunction&) [with M = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >; typename std::add_const<M>::type = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; message_filters::MessageEvent<M>::CreateFunction = std::function<std::shared_ptr<lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >()>; typename std::remove_const<_Tp>::type = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.762585] (autodriving) StderrLine: {'line': b'  128 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message, rclcpp::Time receipt_time, bool nonconst_need_copy, const CreateFunction& create)\n'}
[5.762698] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.762798] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:128:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 4 arguments, 2 provided\n'}
[5.762907] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:123:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&, rclcpp::Time) [with M = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >; typename std::add_const<M>::type = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.763015] (autodriving) StderrLine: {'line': b'  123 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message, rclcpp::Time receipt_time)\n'}
[5.763113] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.763209] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:123:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst ConstMessagePtr&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.763313] (autodriving) StderrLine: {'line': b'  123 |   MessageEvent(\x1b[01;36m\x1b[Kconst ConstMessagePtr& message\x1b[m\x1b[K, rclcpp::Time receipt_time)\n'}
[5.763418] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[5.763523] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:118:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&) [with M = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >; typename std::add_const<M>::type = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.763640] (autodriving) StderrLine: {'line': b'  118 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message)\n'}
[5.763724] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.763806] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:118:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.763888] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:110:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<const void>&, const CreateFunction&) [with M = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; message_filters::MessageEvent<M>::CreateFunction = std::function<std::shared_ptr<lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >()>; typename std::remove_const<_Tp>::type = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.763975] (autodriving) StderrLine: {'line': b'  110 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<void const>& rhs, const CreateFunction& create)\n'}
[5.764058] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.764139] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:110:48:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const void>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.764268] (autodriving) StderrLine: {'line': b'  110 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<void const>& rhs\x1b[m\x1b[K, const CreateFunction& create)\n'}
[5.764352] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.764435] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:104:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::add_const<M>::type>&, bool) [with M = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; typename std::add_const<M>::type = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.764523] (autodriving) StderrLine: {'line': b'  104 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<ConstMessage>& rhs, bool nonconst_need_copy)\n'}
[5.764606] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.764688] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:104:50:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.764792] (autodriving) StderrLine: {'line': b'  104 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<ConstMessage>& rhs\x1b[m\x1b[K, bool nonconst_need_copy)\n'}
[5.764875] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.764956] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:98:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::remove_const<_Tp>::type>&, bool) [with M = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; typename std::remove_const<_Tp>::type = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.765042] (autodriving) StderrLine: {'line': b'   98 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<Message>& rhs, bool nonconst_need_copy)\n'}
[5.765124] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.765206] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:98:45:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::CanBusData_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.765315] (autodriving) StderrLine: {'line': b'   98 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<Message>& rhs\x1b[m\x1b[K, bool nonconst_need_copy)\n'}
[5.765401] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.765485] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:93:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::add_const<M>::type>&) [with M = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; typename std::add_const<M>::type = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.765573] (autodriving) StderrLine: {'line': b'   93 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<ConstMessage>& rhs)\n'}
[5.765656] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.765737] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:93:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.765819] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:88:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::remove_const<_Tp>::type>&) [with M = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >; typename std::remove_const<_Tp>::type = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.765905] (autodriving) StderrLine: {'line': b'   88 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<Message>& rhs)\n'}
[5.765987] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.766069] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:88:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.766161] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:84:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent() [with M = const lgsvl_msgs::msg::SignalArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.766318] (autodriving) StderrLine: {'line': b'   84 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K()\n'}
[5.766401] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.766482] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:84:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 2 provided\n'}
[5.766565] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/simple_filter.h:43\x1b[m\x1b[K,\n'}
[5.766646] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:41\x1b[m\x1b[K,\n'}
[5.766742] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:5\x1b[m\x1b[K:\n'}
[5.766823] (autodriving) StderrLine: {'line': b'/opt/ros/foxy/include/message_filters/signal1.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid message_filters::CallbackHelper1T<P, M>::call(const message_filters::MessageEvent<const M>&, bool) [with P = const message_filters::MessageEvent<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&; M = lgsvl_msgs::msg::SignalArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.766910] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:71:16:\x1b[m\x1b[K   required from here\n'}
[5.766992] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:73:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >::MessageEvent(const message_filters::MessageEvent<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >&, bool)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.767106] (autodriving) StderrLine: {'line': b'   73 |     Event \x1b[01;31m\x1b[Kmy_event\x1b[m\x1b[K(event, nonconst_force_copy || event.nonConstWillCopy());\n'}
[5.767190] (autodriving) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.767272] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:42\x1b[m\x1b[K,\n'}
[5.767355] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/simple_filter.h:43\x1b[m\x1b[K,\n'}
[5.767435] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:41\x1b[m\x1b[K,\n'}
[5.767517] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:5\x1b[m\x1b[K:\n'}
[5.767599] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:128:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&, rclcpp::Time, bool, const CreateFunction&) [with M = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >; typename std::add_const<M>::type = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; message_filters::MessageEvent<M>::CreateFunction = std::function<std::shared_ptr<lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >()>; typename std::remove_const<_Tp>::type = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.767716] (autodriving) StderrLine: {'line': b'  128 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message, rclcpp::Time receipt_time, bool nonconst_need_copy, const CreateFunction& create)\n'}
[5.767827] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.767924] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:128:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 4 arguments, 2 provided\n'}
[5.768006] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:123:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&, rclcpp::Time) [with M = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >; typename std::add_const<M>::type = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.768093] (autodriving) StderrLine: {'line': b'  123 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message, rclcpp::Time receipt_time)\n'}
[5.768175] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.768295] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:123:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst ConstMessagePtr&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.768425] (autodriving) StderrLine: {'line': b'  123 |   MessageEvent(\x1b[01;36m\x1b[Kconst ConstMessagePtr& message\x1b[m\x1b[K, rclcpp::Time receipt_time)\n'}
[5.768511] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[5.768591] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:118:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&) [with M = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >; typename std::add_const<M>::type = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.768680] (autodriving) StderrLine: {'line': b'  118 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message)\n'}
[5.768762] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.768844] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:118:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.768926] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:110:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<const void>&, const CreateFunction&) [with M = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; message_filters::MessageEvent<M>::CreateFunction = std::function<std::shared_ptr<lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >()>; typename std::remove_const<_Tp>::type = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.769027] (autodriving) StderrLine: {'line': b'  110 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<void const>& rhs, const CreateFunction& create)\n'}
[5.769108] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.769200] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:110:48:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const void>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.769309] (autodriving) StderrLine: {'line': b'  110 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<void const>& rhs\x1b[m\x1b[K, const CreateFunction& create)\n'}
[5.769392] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.769474] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:104:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::add_const<M>::type>&, bool) [with M = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; typename std::add_const<M>::type = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.769561] (autodriving) StderrLine: {'line': b'  104 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<ConstMessage>& rhs, bool nonconst_need_copy)\n'}
[5.769644] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.769726] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:104:50:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.769813] (autodriving) StderrLine: {'line': b'  104 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<ConstMessage>& rhs\x1b[m\x1b[K, bool nonconst_need_copy)\n'}
[5.769895] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.769978] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:98:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::remove_const<_Tp>::type>&, bool) [with M = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; typename std::remove_const<_Tp>::type = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.770065] (autodriving) StderrLine: {'line': b'   98 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<Message>& rhs, bool nonconst_need_copy)\n'}
[5.770146] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.770293] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:98:45:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::SignalArray_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.770380] (autodriving) StderrLine: {'line': b'   98 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<Message>& rhs\x1b[m\x1b[K, bool nonconst_need_copy)\n'}
[5.770463] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.770544] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:93:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::add_const<M>::type>&) [with M = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; typename std::add_const<M>::type = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.770639] (autodriving) StderrLine: {'line': b'   93 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<ConstMessage>& rhs)\n'}
[5.770721] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.770802] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:93:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.770883] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:88:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::remove_const<_Tp>::type>&) [with M = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >; typename std::remove_const<_Tp>::type = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.770979] (autodriving) StderrLine: {'line': b'   88 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<Message>& rhs)\n'}
[5.771060] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.771140] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:88:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.771227] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:84:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent() [with M = const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.771312] (autodriving) StderrLine: {'line': b'   84 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K()\n'}
[5.771394] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.771475] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:84:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 2 provided\n'}
[5.771558] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/simple_filter.h:43\x1b[m\x1b[K,\n'}
[5.771656] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:41\x1b[m\x1b[K,\n'}
[5.771740] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:5\x1b[m\x1b[K:\n'}
[5.771824] (autodriving) StderrLine: {'line': b'/opt/ros/foxy/include/message_filters/signal1.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid message_filters::CallbackHelper1T<P, M>::call(const message_filters::MessageEvent<const M>&, bool) [with P = const message_filters::MessageEvent<const sensor_msgs::msg::Imu_<std::allocator<void> > >&; M = lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.771912] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:71:16:\x1b[m\x1b[K   required from here\n'}
[5.771997] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:73:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<const sensor_msgs::msg::Imu_<std::allocator<void> > >::MessageEvent(const message_filters::MessageEvent<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >&, bool)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.772093] (autodriving) StderrLine: {'line': b'   73 |     Event \x1b[01;31m\x1b[Kmy_event\x1b[m\x1b[K(event, nonconst_force_copy || event.nonConstWillCopy());\n'}
[5.772178] (autodriving) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.772263] (autodriving) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal1.h:42\x1b[m\x1b[K,\n'}
[5.772349] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/simple_filter.h:43\x1b[m\x1b[K,\n'}
[5.772434] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/subscriber.h:41\x1b[m\x1b[K,\n'}
[5.772518] (autodriving) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cl4y3r/VDS/autodriving/src/msg_subpub.cpp:5\x1b[m\x1b[K:\n'}
[5.772603] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:128:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&, rclcpp::Time, bool, const CreateFunction&) [with M = const sensor_msgs::msg::Imu_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >; typename std::add_const<M>::type = const sensor_msgs::msg::Imu_<std::allocator<void> >; message_filters::MessageEvent<M>::CreateFunction = std::function<std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >()>; typename std::remove_const<_Tp>::type = sensor_msgs::msg::Imu_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.772697] (autodriving) StderrLine: {'line': b'  128 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message, rclcpp::Time receipt_time, bool nonconst_need_copy, const CreateFunction& create)\n'}
[5.772782] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.772865] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:128:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 4 arguments, 2 provided\n'}
[5.772950] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:123:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&, rclcpp::Time) [with M = const sensor_msgs::msg::Imu_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >; typename std::add_const<M>::type = const sensor_msgs::msg::Imu_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.773056] (autodriving) StderrLine: {'line': b'  123 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message, rclcpp::Time receipt_time)\n'}
[5.773142] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.773227] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:123:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst ConstMessagePtr&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[5.773324] (autodriving) StderrLine: {'line': b'  123 |   MessageEvent(\x1b[01;36m\x1b[Kconst ConstMessagePtr& message\x1b[m\x1b[K, rclcpp::Time receipt_time)\n'}
[5.773411] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[5.773507] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:118:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const ConstMessagePtr&) [with M = const sensor_msgs::msg::Imu_<std::allocator<void> >; message_filters::MessageEvent<M>::ConstMessagePtr = std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >; typename std::add_const<M>::type = const sensor_msgs::msg::Imu_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.773597] (autodriving) StderrLine: {'line': b'  118 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const ConstMessagePtr& message)\n'}
[5.773686] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.773771] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:118:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.773856] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:110:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<const void>&, const CreateFunction&) [with M = const sensor_msgs::msg::Imu_<std::allocator<void> >; message_filters::MessageEvent<M>::CreateFunction = std::function<std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >()>; typename std::remove_const<_Tp>::type = sensor_msgs::msg::Imu_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.773947] (autodriving) StderrLine: {'line': b'  110 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<void const>& rhs, const CreateFunction& create)\n'}
[5.774033] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.774118] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:110:48:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const void>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.774286] (autodriving) StderrLine: {'line': b'  110 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<void const>& rhs\x1b[m\x1b[K, const CreateFunction& create)\n'}
[5.774374] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.774458] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:104:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::add_const<M>::type>&, bool) [with M = const sensor_msgs::msg::Imu_<std::allocator<void> >; typename std::add_const<M>::type = const sensor_msgs::msg::Imu_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.774561] (autodriving) StderrLine: {'line': b'  104 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<ConstMessage>& rhs, bool nonconst_need_copy)\n'}
[5.774646] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.774743] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:104:50:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const sensor_msgs::msg::Imu_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.774837] (autodriving) StderrLine: {'line': b'  104 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<ConstMessage>& rhs\x1b[m\x1b[K, bool nonconst_need_copy)\n'}
[5.774919] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.775000] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:98:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::remove_const<_Tp>::type>&, bool) [with M = const sensor_msgs::msg::Imu_<std::allocator<void> >; typename std::remove_const<_Tp>::type = sensor_msgs::msg::Imu_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.775102] (autodriving) StderrLine: {'line': b'   98 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<Message>& rhs, bool nonconst_need_copy)\n'}
[5.775185] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.775267] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:98:45:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<const lgsvl_msgs::msg::Detection3DArray_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst message_filters::MessageEvent<sensor_msgs::msg::Imu_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.775367] (autodriving) StderrLine: {'line': b'   98 |   MessageEvent(\x1b[01;36m\x1b[Kconst MessageEvent<Message>& rhs\x1b[m\x1b[K, bool nonconst_need_copy)\n'}
[5.775449] (autodriving) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.775529] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:93:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::add_const<M>::type>&) [with M = const sensor_msgs::msg::Imu_<std::allocator<void> >; typename std::add_const<M>::type = const sensor_msgs::msg::Imu_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.775627] (autodriving) StderrLine: {'line': b'   93 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<ConstMessage>& rhs)\n'}
[5.775727] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.775833] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:93:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.775935] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:88:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent(const message_filters::MessageEvent<typename std::remove_const<_Tp>::type>&) [with M = const sensor_msgs::msg::Imu_<std::allocator<void> >; typename std::remove_const<_Tp>::type = sensor_msgs::msg::Imu_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.776062] (autodriving) StderrLine: {'line': b'   88 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K(const MessageEvent<Message>& rhs)\n'}
[5.776166] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.776272] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:88:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[5.776356] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:84:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::MessageEvent<M>::MessageEvent() [with M = const sensor_msgs::msg::Imu_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.776474] (autodriving) StderrLine: {'line': b'   84 |   \x1b[01;36m\x1b[KMessageEvent\x1b[m\x1b[K()\n'}
[5.776566] (autodriving) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.776650] (autodriving) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/message_event.h:84:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 2 provided\n'}
[5.820234] (-) TimerEvent: {}
[5.920634] (-) TimerEvent: {}
[6.021014] (-) TimerEvent: {}
[6.121378] (-) TimerEvent: {}
[6.221767] (-) TimerEvent: {}
[6.322140] (-) TimerEvent: {}
[6.422568] (-) TimerEvent: {}
[6.522940] (-) TimerEvent: {}
[6.623366] (-) TimerEvent: {}
[6.708050] (autodriving) StderrLine: {'line': b'make[2]: *** [CMakeFiles/main_msg.dir/build.make:63: CMakeFiles/main_msg.dir/src/msg_subpub.cpp.o] Error 1\n'}
[6.708518] (autodriving) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/main_msg.dir/all] Error 2\n'}
[6.708868] (autodriving) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[6.711400] (autodriving) CommandEnded: {'returncode': 2}
[6.723548] (-) TimerEvent: {}
[6.751355] (autodriving) JobEnded: {'identifier': 'autodriving', 'rc': 2}
[6.789482] (-) EventReactorShutdown: {}
